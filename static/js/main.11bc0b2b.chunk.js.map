{"version":3,"sources":["components/context/TodosContext.js","img/addTodo.svg","components/styled/NoTodos.styled.js","components/NoTodos.jsx","components/styled/Form.styled.js","components/TodoForm.jsx","components/TodosRemaining.jsx","components/TodosClearCompleted.jsx","components/TodosCheckAll.jsx","components/TodoFilters.jsx","components/styled/List.styled.js","components/styled/Controllers.styled.js","components/styled/FiltersContainer.styled.js","components/TodoList.jsx","components/styled/TodoBg.styled.js","components/TodoBg.jsx","components/styled/Header.styled.js","components/Header.jsx","components/hooks/useLocalStorage.js","components/styled/GlobalStyle.styled.js","components/styled/Theme.styled.js","components/Todo.jsx","index.js"],"names":["TodosContext","createContext","StyledNoTodos","styled","div","NoTodos","src","addTodoSvg","alt","StyledForm","theme","colors","VeryDarkDesaturatedBlue","LightGrayishBlue","TodoForm","useContext","todos","setTodos","idForTodo","setIdForTodo","useState","todoInput","setTodoInput","action","onSubmit","event","preventDefault","trim","length","id","title","isComplete","prevId","type","className","value","onChange","target","placeholder","TodosRemaining","filter","todo","TodosClearCompleted","href","onClick","TodosCheckAll","updatedTodos","map","TodoFilters","setFilter","StyledList","ul","listBg","boxShadow","veryDarkGrayishBlue","borderColor","StyledControllers","filters","filtersHover","StyledFiltersContainer","TodoList","updateTodo","isEditing","todosFiltered","completeTodo","checked","defaultValue","onBlur","onKeyDown","key","cancelEditing","autoFocus","onDoubleClick","markAsEditing","StyledTodoBg","images","desktopBg","mobileBg","TodoBg","props","StyledHeader","Header","themeToggler","useLocalStorage","initialValue","item","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","GlobalStyles","createGlobalStyle","bodyBg","checkLine","VeryDarkGrayishBlue","darkTheme","VeryDarkBlue","DarkGrayishBlue","lightTheme","VeryLightGrayishBlue","Todo","setTheme","rel","Provider","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"kNAEaA,EAAeC,0B,QCFb,MAA0B,oC,cCE5BC,EAAgBC,IAAOC,IAAV,4K,OCWXC,I,EAAAA,EATf,WACE,OACE,eAACH,EAAD,WACE,qBAAKI,IAAKC,EAAYC,IAAI,iBAC1B,uD,OCNOC,EAAaN,IAAOC,IAAV,2hCAaC,qBAAGM,MAAkBC,OAAOC,2BACvC,qBAAGF,MAAkBC,OAAOE,oBC2B1BC,MArCf,WACE,MAAkDC,qBAAWf,GAArDgB,EAAR,EAAQA,MAAMC,EAAd,EAAcA,SAASC,EAAvB,EAAuBA,UAAUC,EAAjC,EAAiCA,aACjC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OACE,cAACb,EAAD,UACE,sBAAMc,OAAO,IAAIC,SAhBL,SAACC,GACfA,EAAMC,iBAE0B,IAA5BL,EAAUM,OAAOC,SAIrBX,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEa,GAAIX,EAAWY,MAAOT,EAAWU,YAAY,MAEnEZ,GAAa,SAACa,GAAD,OAAYA,EAAS,KAElCV,EAAa,MAKX,SACE,uBACEW,KAAK,OACLC,UAAU,aACVC,MAAOd,EACPe,SAzBY,SAACX,GACnBH,EAAaG,EAAMY,OAAOF,QAyBpBG,YAAY,8BCzBPC,MARf,WACE,IAAQvB,EAAUD,qBAAWf,GAArBgB,MAIR,OAAO,iCAFEA,EAAMwB,QAAO,SAACC,GAAD,OAAWA,EAAKV,cAAYH,OAE3C,uBCWMc,MAff,WAEE,MAA2B3B,qBAAWf,GAA9BgB,EAAR,EAAQA,MAAMC,EAAd,EAAcA,SAMd,OACE,8BACE,mBAAG0B,KAAK,KAAKC,QANM,WACrB3B,EAAS,YAAID,GAAOwB,QAAO,SAACC,GAAD,OAAWA,EAAKV,gBAKzC,gCCSSc,MAlBf,WACI,MAA2B9B,qBAAWf,GAA9BgB,EAAR,EAAQA,MAAMC,EAAd,EAAcA,SAUd,OACI,8BACG,mBAAG0B,KAAK,KAAKC,QAXH,WACb,IAAME,EAAe9B,EAAM+B,KAAI,SAACN,GAG9B,OAFAA,EAAKV,YAAa,EAEXU,KAGTxB,EAAS6B,IAIN,0BCHIE,I,MAAAA,EAZf,WAEE,MAA8BjC,qBAAWf,GAAjCwC,EAAR,EAAQA,OAAQS,EAAhB,EAAgBA,UAChB,OACE,gCACE,mBAAGN,KAAK,KAAKC,QAAS,kBAAMK,EAAU,QAAQf,UAAuB,QAAXM,EAAmB,gBAAiB,GAA9F,iBACA,mBAAGG,KAAK,KAAKC,QAAS,kBAAMK,EAAU,WAAWf,UAAwB,WAAXM,EAAsB,gBAAiB,GAArG,oBACA,mBAAGG,KAAK,KAAKC,QAAS,kBAAMK,EAAU,cAAcf,UAAwB,cAAXM,EAAyB,gBAAiB,GAA3G,2BCROU,EAAa/C,IAAOgD,GAAV,8oEAQD,qBAAGzC,MAAkBC,OAAOyC,UAClC,qBAAG1C,MAAkBC,OAAO0C,aASb,qBAAG3C,MAAkBC,OAAO2C,uBAI3C,qBAAG5C,MAAkBC,OAAOK,SAmBlB,qBAAGN,MAAkBC,OAAO4C,eCzCzCC,EAAmBrD,IAAOC,IAAT,kbAMD,qBAAGM,MAAkBC,OAAO2C,uBAM5C,qBAAG5C,MAAkBC,OAAO8C,WAG1B,qBAAG/C,MAAkBC,OAAO+C,gBCf9BC,EAAyBxD,IAAOC,IAAV,mXAWtB,qBAAGM,MAAkBC,OAAO8C,WAGxB,qBAAE/C,MAAiBC,OAAO+C,gBCoI5BE,I,EAAAA,EA1If,WACE,MAAoC7C,qBAAWf,GAAvCgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUuB,EAAzB,EAAyBA,OA8BnBqB,EAAa,SAACpC,EAAOI,GACzB,IAAMiB,EAAe9B,EAAM+B,KAAI,SAACN,GAC9B,OAAyC,IAArChB,EAAMY,OAAOF,MAAMR,OAAOC,QAC5Ba,EAAKqB,WAAY,EACVrB,IAELA,EAAKZ,KAAOA,IACdY,EAAKX,MAAQL,EAAMY,OAAOF,MAC1BM,EAAKqB,WAAY,GAEZrB,MAGTxB,EAAS6B,IAuCX,OACE,mCACE,eAACI,EAAD,WAZkB,SAACV,GACrB,MAAe,QAAXA,EACKxB,EACa,WAAXwB,EACFxB,EAAMwB,QAAO,SAACC,GAAD,OAAWA,EAAKV,cAChB,cAAXS,EACFxB,EAAMwB,QAAO,SAACC,GAAD,OAAUA,EAAKV,mBAD9B,EAQFgC,CAAcvB,GAAQO,KAAI,SAACN,GAAD,OACzB,+BACE,gCACE,uBACER,KAAK,WACLG,SAAU,kBAvEH,SAACP,GACpB,IAAMiB,EAAe9B,EAAM+B,KAAI,SAACN,GAI9B,OAHIA,EAAKZ,KAAOA,IACdY,EAAKV,YAAcU,EAAKV,YAEnBU,KAGTxB,EAAS6B,GA+DmBkB,CAAavB,EAAKZ,KAClCoC,UAASxB,EAAKV,aAEdU,EAAKqB,UAQL,uBACE7B,KAAK,OACLC,UAAU,kBACVgC,aAAczB,EAAKX,MACnBqC,OAAQ,SAAC1C,GAAD,OAAWoC,EAAWpC,EAAOgB,EAAKZ,KAC1CuC,UAAW,SAAC3C,GACQ,UAAdA,EAAM4C,IACRR,EAAWpC,EAAOgB,EAAKZ,IACA,WAAdJ,EAAM4C,KApDb,SAACxC,GACrB,IAAMiB,EAAe9B,EAAM+B,KAAI,SAACN,GAI9B,OAHIA,EAAKZ,KAAOA,IACdY,EAAKqB,WAAY,GAEZrB,KAGTxB,EAAS6B,GA6CSwB,CAAc7B,EAAKZ,KAGvB0C,WAAS,IAnBX,sBACEC,cAAe,kBAjDT,SAAC3C,GACrB,IAAMiB,EAAe9B,EAAM+B,KAAI,SAACN,GAI9B,OAHIA,EAAKZ,KAAOA,IACdY,EAAKqB,WAAY,GAEZrB,KAGTxB,EAAS6B,GAyC0B2B,CAAchC,EAAKZ,KACxCK,UAAWO,EAAKV,WAAa,eAAiB,GAFhD,SAIGU,EAAKX,WAmBZ,mBAAGa,KAAK,KAAKC,QAAS,kBAjDZf,EAiD6BY,EAAKZ,QAhDpDZ,EAAS,YAAID,GAAOwB,QAAO,SAACC,GAAD,OAAUA,EAAKZ,KAAOA,MADhC,IAACA,GAiDV,SACE,qBAAKvB,IAAI,0BAA0BE,IAAI,mBAhClCiC,EAAKZ,OAqChB,eAAC2B,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAACG,EAAD,UACE,cAAC,EAAD,YC3IGe,EAAcvE,IAAOC,IAAT,mWAGF,qBAAGM,MAAkBiE,OAAOC,aAUvB,qBAAGlE,MAAkBiE,OAAOE,YCLzCC,I,EAAAA,EARf,SAAgBC,GACd,OACE,cAACL,EAAD,KCFSM,EAAe7E,IAAOC,IAAV,8hBCWV6E,MAXf,YAAiC,IAAhBC,EAAe,EAAfA,aACf,OACE,eAACF,EAAD,WACE,sCACA,mBAAGrC,KAAK,KAAKC,QAASsC,EAAtB,SACE,qBAAK5E,IAAI,wBAAwBE,IAAI,mBCS9B2E,I,EAAAA,EAdf,SAAyBd,EAAKe,GAC5B,MAA0BhE,oBAAS,WAC/B,IAAMiE,EAAOC,aAAaC,QAAQlB,GAElC,OAAOgB,EAAOG,KAAKC,MAAMJ,GAAMD,KAHnC,mBAAOjD,EAAP,KAAcuD,EAAd,KAUA,OAJAC,qBAAU,WACRL,aAAaM,QAAQvB,EAAKmB,KAAKK,UAAU1D,MACxC,CAACkC,EAAKlC,IAEF,CAAEA,EAAOuD,ICXLI,G,MAAeC,YAAH,omBAIX,qBAAErF,MAAiBC,OAAOE,oBACf,qBAAEH,MAAiBC,OAAOqF,UAOvC,qBAAGtF,MAAkBC,OAAOsF,aAM5B,qBAAGvF,MAAkBC,OAAOE,oBAClB,qBAAGH,MAAkBC,OAAOuF,wBCrBrCC,EAAY,CACvBxF,OAAQ,CACNqF,OAAQ,qBACR5C,OAAO,qBACPC,UAAU,qBACVE,YAAa,qBACb0C,UAAU,qBACVjF,MAAM,qBACNyC,QAAQ,qBACRC,aAAa,qBACb0C,aAAc,qBACdxF,wBAAyB,qBACzBC,iBAAkB,qBAClBwF,gBAAiB,qBACjBH,oBAAqB,qBACrB5C,oBAAqB,sBAEvBqB,OAAO,CACLC,UAAW,+BACXC,SAAS,gCAIAyB,EAAa,CACxB3F,OAAQ,CACNqF,OAAQ,kBACR5C,OAAO,kBACPC,UAAU,2BACVE,YAAa,qBACb0C,UAAU,qBACVjF,MAAM,qBACNyC,QAAQ,oBACRC,aAAa,qBACb6C,qBAAsB,qBACtB1F,iBAAkB,qBAClBwF,gBAAiB,oBACjBH,oBAAqB,sBAGvBvB,OAAO,CACLC,UAAW,gCACXC,SAAS,iCCwBE2B,MAnDf,WACE,MAA0BrB,EAAgB,QAAS,IAAnD,mBAAOnE,EAAP,KAAcC,EAAd,KAEA,EAAkCkE,EAAgB,YAAa,GAA/D,mBAAOjE,EAAP,KAAkBC,EAAlB,KAEA,EAA4BC,mBAAS,OAArC,mBAAOoB,EAAP,KAAeS,EAAf,KAEA,EAA0BkC,EAAgB,QAAS,QAAnD,mBAAOzE,EAAP,KAAc+F,EAAd,KAMA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAe/F,MAAiB,SAAVA,EAAmByF,EAAYG,EAArD,UACE,eAAC,IAAD,WACE,0DACA,sBAAMI,IAAI,aAAa/D,KAAK,iCAC5B,sBAAM+D,IAAI,aAAa/D,KAAK,8BAC5B,sBACEA,KAAK,2FACL+D,IAAI,kBAGR,iCACE,cAACZ,EAAD,IAEA,cAAC,EAAD,IACA,eAAC9F,EAAa2G,SAAd,CACExE,MAAO,CACLnB,QACAC,WACAC,YACAC,eACAqB,SACAS,aAPJ,UAUE,cAAC,EAAD,CAAQiC,aA9BG,WACAuB,EAAT,SAAV/F,EAA4B,QAAoB,WA+BxC,cAAC,EAAD,IAECM,EAAMY,OAAS,EAAI,cAAC,EAAD,IAAe,cAAC,EAAD,gB,gBCjD/CgF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.11bc0b2b.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const TodosContext = createContext()","export default __webpack_public_path__ + \"static/media/addTodo.96d37d49.svg\";","import styled from \"styled-components\";\n\nexport const StyledNoTodos = styled.div`\n  margin: 30px auto;\n  text-align: center;\n  font-size: 1.2rem;\n\n  @media (max-width: 576px) {\n     img{\n       width: 70%;\n     }\n  }\n`;\n","import React from \"react\";\nimport addTodoSvg from \"../img/addTodo.svg\";\nimport { StyledNoTodos } from \"./styled/NoTodos.styled\";\n\nfunction NoTodos() {\n  return (\n    <StyledNoTodos>\n      <img src={addTodoSvg} alt=\"Add Todo Svg\" />\n      <p>Add some todos ...</p>\n    </StyledNoTodos>\n  );\n}\n\nexport default NoTodos;\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.div`\n  max-width: 36rem;\n  z-index: 10;\n  position: absolute;\n  top: 18%;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n\n  input {\n    width: 100%;\n    border: none;\n    border-radius: 6px;\n    background-color: ${({ theme }) => theme.colors.VeryDarkDesaturatedBlue};\n    color: ${({ theme }) => theme.colors.LightGrayishBlue};\n    padding: 1.5rem 0;\n    font-family: \"Josefin Sans\", sans-serif;\n    font-size: 18px;\n    font-weight: 400;\n    margin-top: 16px;\n    caret-color: hsl(220, 98%, 61%);\n    box-sizing: border-box;\n  }\n\n\n  input::placeholder {\n    font-weight: 500;\n    font-size: 18px;\n    padding-left: 4.5rem;\n  }\n\n  input:focus {\n    border: none;\n    outline: none;\n    padding-left: 5rem;\n  }\n\n  input:focus::placeholder {\n    padding-left: 0;\n  }\n\n\n \n  @media (max-width: 576px) {\n    max-width: 22rem;\n    input {\n      padding: 1.2rem 1rem;\n      font-size: 1rem;\n    }\n\n    input:focus {\n    padding-left: 3.5rem;\n  }\n\n  input::placeholder {\n    font-size: 1em;\n    padding: 2.5rem;\n  }\n  }\n  @media (max-width:400px){\n    max-width: 20rem;\n   }\n`;\n","import React, { useContext, useState } from \"react\";\nimport { StyledForm } from \"./styled/Form.styled\";\nimport { TodosContext } from \"./context/TodosContext\";\n\n\n\nfunction TodoForm() {\n  const { todos,setTodos,idForTodo,setIdForTodo } = useContext(TodosContext);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  const handleInput = (event) => {\n    setTodoInput(event.target.value);\n  };\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    if (todoInput.trim().length === 0) {\n      return;\n    }\n\n    setTodos([...todos, { id: idForTodo, title: todoInput, isComplete: false }]);\n\n    setIdForTodo((prevId) => prevId + 1);\n\n    setTodoInput(\"\");\n  };\n\n  return (\n    <StyledForm>\n      <form action=\"#\" onSubmit={addTodo}>\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          value={todoInput}\n          onChange={handleInput}\n          placeholder=\"Create a new todo...\"\n        />\n      </form>\n    </StyledForm>\n  );\n}\n\nexport default TodoForm;\n","import React, { useContext } from \"react\";\nimport { TodosContext } from \"./context/TodosContext\";\n\nfunction TodosRemaining() {\n  const { todos } = useContext(TodosContext);\n  const remaining = () => {\n    return todos.filter((todo) => !todo.isComplete).length;\n  };\n  return <span>{remaining()} items remaining</span>;\n}\n\nexport default TodosRemaining;\n","import React, { useContext } from \"react\";\nimport { TodosContext } from \"./context/TodosContext\";\n\n\nfunction TodosClearCompleted() {\n\n  const { todos,setTodos } = useContext(TodosContext);\n\n  const clearCompleted = () => {\n    setTodos([...todos].filter((todo) => !todo.isComplete));\n  };\n  \n  return (\n    <div>\n      <a href=\"/#\" onClick={clearCompleted} >Clear completed</a>\n    </div>\n  );\n}\n\nexport default TodosClearCompleted;\n","import React, { useContext } from 'react';\nimport { TodosContext } from './context/TodosContext';\n\n\n\nfunction TodosCheckAll() {\n    const { todos,setTodos } = useContext(TodosContext);\n    const checkAll = () => {\n        const updatedTodos = todos.map((todo) => {\n          todo.isComplete = true;\n    \n          return todo;\n        });\n    \n        setTodos(updatedTodos);\n      };\n    return (\n        <div>\n           <a href=\"/#\" onClick={checkAll} >Check All</a>\n        </div>\n    );\n}\n\nexport default TodosCheckAll;","import React, { useContext } from \"react\";\nimport { TodosContext } from \"./context/TodosContext\";\n\nfunction TodoFilters() {\n\n  const { filter, setFilter } = useContext(TodosContext);\n  return (\n    <div>\n      <a href=\"/#\" onClick={() => setFilter('all')} className={ filter === 'all' ? \"filter-active\" :\"\"}>All</a>\n      <a href=\"/#\" onClick={() => setFilter('active')} className={  filter === 'active' ? \"filter-active\" :\"\" }>Active</a>\n      <a href=\"/#\" onClick={() => setFilter('completed')} className={  filter === 'completed' ? \"filter-active\" :\"\" }>Completed</a>\n    </div>\n  );\n}\n\nexport default TodoFilters;\n","import styled from \"styled-components\";\n\nexport const StyledList = styled.ul`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  right: 0;\n  margin: 1.5rem auto;\n  max-width: 36rem;\n  z-index: 10;\n  background-color: ${({ theme }) => theme.colors.listBg};\n  box-shadow: ${({ theme }) => theme.colors.boxShadow} 0px 8px 24px;\n  border-radius: 6px;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 3.8rem;\n    padding: 0 1rem;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.veryDarkGrayishBlue};\n\n    span {\n      margin-left: 16px;\n      color:  ${({ theme }) => theme.colors.todos} ;\n    }\n\n    div {\n      display: flex;\n      align-items: center;\n      position: relative;\n      flex: 1;\n      font-size: 18px;\n    }\n\n    input[type=\"checkbox\"] {\n      display: inline-flex;\n      align-items: center;\n      cursor: pointer;\n      position: relative;\n      height: 25px;\n      width: 25px;\n      padding: 1rem;\n      border: 1px solid ${({ theme }) => theme.colors.borderColor};\n      border-radius: 50%;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      -o-appearance: none;\n      appearance: none;\n      outline: none;\n      transition-duration: 0.3s;\n\n      &:checked {\n        background: linear-gradient(hsl(192, 100%, 67%), hsl(280, 87%, 65%));\n      }\n\n      &:hover {\n        border-color: hsl(192, 100%, 67%);\n      }\n\n      &:checked::before {\n        background-image: url(\"./images/icon-check.svg\");\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        content: \"\";\n        position: absolute;\n        left: 0.4rem;\n        top: 0.4rem;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  @media (max-width: 576px) {\n    max-width: 22rem;\n    li {\n      span {\n        margin-left: 8px;\n        font-size: 1rem;\n      }\n\n      div {\n        margin-right: 0px;\n      }\n\n      input[type=\"checkbox\"] {\n        height: 24px;\n        width: 24px;\n        padding: 0.5rem;\n\n        &:checked::before {\n          width: 14px;\n          height: 14px;\n          left: 0.3rem;\n          top: 0.3rem;\n        }\n      }\n    }\n  }\n\n  @media (max-width:400px){\n    max-width: 20rem;\n   }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledControllers= styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding:0 1rem;\n  height: 3.8rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.veryDarkGrayishBlue};\n\n  a,span{\n    font-size: 1rem;\n    text-decoration: none;\n    margin-left: 14px;\n    color: ${({ theme }) => theme.colors.filters};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.filtersHover};\n    }\n  }\n\n  @media (max-width: 576px) {\n    a,span{\n    font-size: .8rem;\n    margin-left: 0px;\n    }\n  }\n\n`;\n","import styled from \"styled-components\";\n\nexport const StyledFiltersContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding:0 1rem ;\n  height: 3.8rem;\n  font-size: 1rem;\n\n  a{\n    text-decoration: none;\n    margin-left: 14px;\n    color:${ ({ theme }) => theme.colors.filters};\n\n    &:hover{\n       color: ${ ({theme}) => theme.colors.filtersHover };\n    }\n    \n  }\n\n  @media (max-width: 576px) {\n\n    a{\n    font-size: .8rem;\n    \n    }\n  }\n`","import React, { useContext} from \"react\";\nimport { TodosContext } from \"./context/TodosContext\";\nimport TodosRemaining from \"./TodosRemaining\";\nimport TodosClearCompleted from \"./TodosClearCompleted\";\nimport TodosCheckAll from \"./TodosCheckAll\";\nimport TodoFilters from \"./TodoFilters\";\nimport { StyledList } from \"./styled/List.styled\";\nimport { StyledControllers } from \"./styled/Controllers.styled\";\nimport { StyledFiltersContainer } from \"./styled/FiltersContainer.styled\";\n\nfunction TodoList() {\n  const { todos, setTodos, filter } = useContext(TodosContext);\n \n  \n    //   const handleDrag = (result) => {\n    //     const { source, destination } = result;\n    //     if (!destination) return;\n    //     if (destination.index === source.index\n    //         && destination.droppableId === source.droppableId) return;\n    //       setTodos(todos => reorder(todos, source.index, destination.index));\n    // }\n\n    // const reorder = (todos, sourceIndex, destinationIndex) => {\n    //     const result = [...todos];\n    //     const [removed] = result.splice(sourceIndex, 1);\n    //     result.splice(destinationIndex, 0, removed);\n    //     return result;\n    // }\n\n\n  const completeTodo = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  const updateTodo = (event, id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (event.target.value.trim().length === 0) {\n        todo.isEditing = false;\n        return todo;\n      }\n      if (todo.id === id) {\n        todo.title = event.target.value;\n        todo.isEditing = false;\n      }\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  const markAsEditing = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isEditing = true;\n      }\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  const cancelEditing = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isEditing = false;\n      }\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  const deleteTodo = (id) => {\n    setTodos([...todos].filter((todo) => todo.id !== id));\n  };\n\n  const todosFiltered = (filter) => {\n    if (filter === \"all\") {\n      return todos;\n    } else if (filter === \"active\") {\n      return todos.filter((todo) => !todo.isComplete);\n    } else if (filter === \"completed\") {\n      return todos.filter((todo) => todo.isComplete);\n    }\n  };\n\n  return (\n    <>\n      <StyledList>\n        {todosFiltered(filter).map((todo) => (\n          <li key={todo.id}>\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={() => completeTodo(todo.id)}\n                checked={todo.isComplete ? true : false}\n              />\n              {!todo.isEditing ? (\n                <span\n                  onDoubleClick={() => markAsEditing(todo.id)}\n                  className={todo.isComplete ? \"line-through\" : \"\"}\n                >\n                  {todo.title}\n                </span>\n              ) : (\n                <input\n                  type=\"text\"\n                  className=\"todo-item-input\"\n                  defaultValue={todo.title}\n                  onBlur={(event) => updateTodo(event, todo.id)}\n                  onKeyDown={(event) => {\n                    if (event.key === \"Enter\") {\n                      updateTodo(event, todo.id);\n                    } else if (event.key === \"Escape\") {\n                      cancelEditing(todo.id);\n                    }\n                  }}\n                  autoFocus\n                />\n              )}\n            </div>\n            <a href=\"/#\" onClick={() => deleteTodo(todo.id)}>\n              <img src=\"./images/icon-cross.svg\" alt=\"icon-cross\" />\n            </a>\n          </li>\n        ))}\n\n        <StyledControllers>\n          <TodosRemaining />\n          <TodosCheckAll />\n          <TodosClearCompleted />\n        </StyledControllers>\n\n        <StyledFiltersContainer>\n          <TodoFilters />\n        </StyledFiltersContainer>\n      </StyledList>\n    </>\n  );\n}\n\nexport default TodoList;\n","import styled from \"styled-components\";\n\nexport const StyledTodoBg= styled.div`\n   &::before{\n    content: \"\";\n    background: url(${ ({ theme }) => theme.images.desktopBg })  center center/cover no-repeat;\n    display: block;\n    z-index: 3;\n    height: 40vh; \n    width: 100%;\n    position: relative; \n   }\n\n   @media (max-width:576px){\n      &::before{\n         background: url(${ ({ theme }) => theme.images.mobileBg })  center center/cover no-repeat;\n      }\n   }\n`","import { StyledTodoBg } from \"./styled/TodoBg.styled\";\n\nfunction TodoBg(props) {\n  return (\n    <StyledTodoBg>\n        \n    </StyledTodoBg>\n  );\n}\n\nexport default TodoBg;\n","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.div`\n display: flex;\n align-items: center;\n justify-content: space-between;\n max-width: 36rem;\n z-index: 10;\n position: absolute;\n top: 10%;\n left: 0; \n right: 0;\n margin :0 auto ;\n\n h1{\n     font-size:3rem;\n     font-weight: 700;\n     text-transform: uppercase;\n     color: #fff;\n     letter-spacing: 12px;\n }\n\n @media (max-width:576px){\n    max-width: 22rem;\n\n    h2{\n     font-size:1.5rem;\n     letter-spacing: 8px;\n   }\n   }\n @media (max-width:400px){\n    max-width: 20rem;\n   }\n\n  \n`","import { StyledHeader } from \"./styled/Header.styled\";\n\nfunction Header({themeToggler}) {\n  return (\n    <StyledHeader>\n      <h1>Todo</h1>\n      <a href=\"/#\" onClick={themeToggler}>\n        <img src=\"./images/icon-sun.svg\" alt=\"icon-sun\" />\n      </a>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n      const item = localStorage.getItem(key);\n\n      return item ? JSON.parse(item):initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [ value, setValue];\n}\n\nexport default useLocalStorage;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body{\n    font-family: 'Josefin Sans', sans-serif;\n    font-size: 18px;\n    color: ${ ({theme}) => theme.colors.LightGrayishBlue };\n    background-color: ${ ({theme}) => theme.colors.bodyBg } ;\n    \n  }\n\n  \n.line-through {\n  text-decoration: line-through;\n  color: ${ ({ theme }) => theme.colors.checkLine} !important;\n}\n\n\n.todo-item-input {\n  margin-left: 8px;\n  color: ${ ({ theme }) => theme.colors.LightGrayishBlue};\n  background-color: ${({ theme }) => theme.colors.VeryDarkGrayishBlue};\n  width: 100%;\n  border: none;\n  padding: 8px;\n  font-size: 18px;\n  outline: none;\n}\n\n .filter-active  {\n  color:hsl(220, 98%, 61%)!important ;\n}\n/* \n- Bright Blue: hsl(220, 98%, 61%)\n- Check Background: linear-gradient hsl(192, 100%, 67%) to hsl(280, 87%, 65%) */\n`;\n","export const darkTheme = {\n  colors: {\n    bodyBg: \"hsl(235, 21%, 11%)\",\n    listBg:\"hsl(235, 24%, 19%)\",\n    boxShadow:\"hsl(235, 21%, 11%)\",\n    borderColor: \"hsl(233, 14%, 35%)\",\n    checkLine:\"hsl(233, 14%, 35%)\",\n    todos:\"hsl(234, 39%, 85%)\",\n    filters:\"hsl(233, 14%, 35%)\",\n    filtersHover:\"hsl(234, 39%, 85%)\",\n    VeryDarkBlue: \"hsl(235, 21%, 11%)\",\n    VeryDarkDesaturatedBlue: \"hsl(235, 24%, 19%)\",\n    LightGrayishBlue: \"hsl(234, 39%, 85%)\",\n    DarkGrayishBlue: \"hsl(234, 11%, 52%)\",\n    VeryDarkGrayishBlue: \"hsl(233, 14%, 35%)\",\n    veryDarkGrayishBlue: \"hsl(237, 14%, 26%)\",\n  },\n  images:{\n    desktopBg: './images/bg-desktop-dark.jpg',\n    mobileBg:'./images/bg-mobile-dark.jpg'\n  }\n\n};\nexport const lightTheme = {\n  colors: {\n    bodyBg: \"hsl(0, 0%, 98%)\",\n    listBg:\"hsl(0, 0%, 98%)\",\n    boxShadow:\"rgba(149, 157, 165, 0.2)\",\n    borderColor: \"hsl(233, 11%, 84%)\",\n    checkLine:\"hsl(233, 11%, 84%)\",\n    todos:\"hsl(233, 14%, 35%)\",\n    filters:\"hsl(236, 9%, 61%)\",\n    filtersHover:\"hsl(233, 14%, 35%)\",\n    VeryLightGrayishBlue: \"hsl(236, 33%, 92%)\",\n    LightGrayishBlue: \"hsl(233, 11%, 84%)\",\n    DarkGrayishBlue: \"hsl(236, 9%, 61%)\",\n    VeryDarkGrayishBlue: \"hsl(235, 19%, 35%)\",\n\n  },\n  images:{\n    desktopBg: './images/bg-desktop-light.jpg',\n    mobileBg:'./images/bg-mobile-light.jpg'\n  },\n\n};\n\n\n","import { useState } from \"react\";\nimport { TodosContext } from \"./context/TodosContext\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport NoTodos from \"./NoTodos\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport TodoBg from \"./TodoBg\";\nimport Header from \"./Header\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { ThemeProvider } from \"styled-components\";\nimport \"../css/reset.css\";\nimport { GlobalStyles } from \"./styled/GlobalStyle.styled\";\nimport { darkTheme, lightTheme } from \"./styled/Theme.styled\";\n\nfunction Todo() {\n  const [todos, setTodos] = useLocalStorage(\"todos\", []);\n\n  const [idForTodo, setIdForTodo] = useLocalStorage(\"idForTodo\", 1);\n\n  const [filter, setFilter] = useState(\"all\");\n\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"dark\");\n\n  const themeToggler = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n  };\n\n  return (\n    <HelmetProvider>\n      <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n        <Helmet>\n          <title>CreditClan | Todo App</title>\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"></link>\n          <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,700;1,400&display=swap\"\n            rel=\"stylesheet\"\n          ></link>\n        </Helmet>\n        <main>\n          <GlobalStyles />\n\n          <TodoBg />\n          <TodosContext.Provider\n            value={{\n              todos,\n              setTodos,\n              idForTodo,\n              setIdForTodo,\n              filter,\n              setFilter,\n            }}\n          >\n            <Header themeToggler={themeToggler} />\n\n            <TodoForm />\n\n            {todos.length > 0 ? <TodoList /> : <NoTodos />}\n          </TodosContext.Provider>\n        </main>\n      </ThemeProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default Todo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Todo from './components/Todo'\nimport {DndProvider} from \"react-dnd\"; \nimport {HTML5Backend} from \"react-dnd-html5-backend\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <Todo />\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}